{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNativeWebrtc","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","useAntMedia","params","url","mediaConstraints","callbackError","callback","peer_connection_config","debug","onlyDataChannel","adaptorRef","useRef","localStream","remotePeerConnection","current","remotePeerConnectionStats","remoteDescriptionSet","iceCandidateList","config","playStreamIds","pingTimer","idMapping","Array","closePeerConnection","useCallback","streamId","console","log","peerConnection","dataChannel","close","signalingState","playStreamIndex","indexOf","splice","clearInterval","timerId","iceCandidateReceived","event","candidate","jsCmd","command","label","sdpMLineIndex","id","sdpMid","ws","sendJson","onTrack","dataObj","stream","streams","track","trackId","undefined","transceiver","mid","initDataChannel","onerror","error","obj","readyState","onmessage","onopen","onclose","initPeerConnection","dataChannelMode","closedStreamId","RTCPeerConnection","iceServers","includes","getTracks","forEach","addTrack","onicecandidate","ontrack","ondatachannel","channel","dataChannelOptions","ordered","dataChannelPeer","createDataChannel","err","message","gotDescription","configuration","setLocalDescription","type","sdp","startPublishing","createOffer","stack","addIceCandidate","takeConfiguration","typeOfConfiguration","idMap","conf","replace","isTypeOffer","setRemoteDescription","RTCSessionDescription","length","keys","configur","createAnswer","toString","takeCandidate","idOfTheStream","tmpLabel","tmpCandidate","candidateSdp","RTCIceCandidate","index","findIndex","JSON","stringify","key","push","WebSocket","dt","send","useEffect","getDevices","mediaDevices","getUserMedia","then","catch","setPingTimer","data","parse","definition","clearPingTimer","code","reason","publish","token","subscriberId","subscriberCode","streamName","mainTrack","metaData","video","audio","getVideoTracks","getAudioTracks","play","room","enableTracks","viewerInfo","stop","join","leave","muteLocalMic","enabled","unmuteLocalMic","setLocalMicVolume","volume","_setVolume","setRemoteAudioVolume","roomName","_remoteStreams","audioTrackID","getTrackById","muteRemoteAudio","unmuteRemoteAudio","getRoomInfo","setInterval","peerMessage","deviceArray","devices","enumerateDevices","map","device","ondevicechange","sendData","turnOffLocalCamera","turnOnLocalCamera","turnOffRemoteCamera","videoTrackID","turnOnRemoteCamera","switchCamera","_switchCamera","rtc_view","customStyles","width","height","alignSelf","objectFit","MediaStreamTrack","mediaStream","MediaStream","toURL","props","streamURL","style","createElement","RTCView"],"sources":["index.tsx"],"sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useRef,\n  MutableRefObject,\n} from 'react';\n\nimport {\n  RTCPeerConnection,\n  RTCIceCandidate,\n  RTCSessionDescription,\n  MediaStream,\n  MediaStreamTrack,\n  mediaDevices,\n  RTCView,\n} from 'react-native-webrtc';\n\n//Interfaces\nexport interface Params {\n  url: string;\n  mediaConstraints: any;\n  callback(this: Adaptor, message: string, data?: any): void;\n  callbackError?: (errorMessage: string, data?: any) => void;\n  peer_connection_config?: any;\n  debug?: boolean;\n  onlyDataChannel?: boolean;\n}\nexport interface RemoteStreams {\n  [key: string]: MediaStream;\n}\n\nexport interface Adaptor {\n  publish: (streamId: string, token?: string, subscriberId?:string , subscriberCode?: string, streamName?: string, mainTrack?:string, metaData?:string) => void;\n  play: (streamId: string, token?: string, room?: string , enableTracks?: MediaStream[],subscriberId?:string , subscriberCode?: string,  metaData?:string) => void;\n  stop: (streamId: string) => void;\n  join: (streamId: string) => void;\n  leave: (streamId: string) => void;\n  getRoomInfo: (room: string, streamId?: string) => void;\n  initPeerConnection: (\n    streamId: string,\n    dataChannelMode: 'publish' | 'play' | 'peer'\n  ) => Promise<void>;\n  localStream: MutableRefObject<MediaStream | null>;\n  peerMessage: (streamId: string, definition: any, data: any) => void;\n  sendData: (streamId: string, message: string) => void;\n  muteLocalMic: () => void;\n  unmuteLocalMic: () => void;\n  setLocalMicVolume: (volume: number) => void;\n  setRemoteAudioVolume: (volume: number, streamId: string, roomName: string|undefined) => void;\n  muteRemoteAudio: (streamId: string, roomName: string|undefined) => void;\n  unmuteRemoteAudio: (streamId: string, roomName: string|undefined) => void;\n  turnOffLocalCamera: () => void;\n  turnOnLocalCamera: () => void;\n  turnOffRemoteCamera: () => void;\n  turnOnRemoteCamera: () => void;\n  switchCamera: () => void;\n  getDevices: () => Promise<any>;\n}\nexport interface RemotePeerConnection {\n  [key: string]: RTCPeerConnection;\n}\nexport interface RemotePeerConnectionStats {\n  [key: string]: { timerId: number };\n}\n\nexport interface RemoteDescriptionSet {\n  [key: string]: boolean;\n}\nexport interface IceCandidateList {\n  [key: string]: RTCIceCandidate[];\n}\nexport interface Sender {\n  track: MediaStreamTrack;\n  getParameters: () => {\n    encodings?: any;\n  };\n  setParameters: (data: any) => Record<string, unknown>;\n}\n//useAntMedia main adaptor function\nexport function useAntMedia(params: Params) {\n\n  const {\n    url,\n    mediaConstraints,\n    callbackError,\n    callback,\n    peer_connection_config,\n    debug,\n    onlyDataChannel,\n  } = params;\n\n  const adaptorRef: any = useRef<null | Adaptor>(null);\n\n  let localStream: any = useRef(null);\n\n  const remotePeerConnection = useRef<RemotePeerConnection>({}).current;\n  const remotePeerConnectionStats = useRef<RemotePeerConnectionStats>(\n    {}\n  ).current;\n\n  const remoteDescriptionSet = useRef<RemoteDescriptionSet>({}).current;\n  const iceCandidateList = useRef<IceCandidateList>({}).current;\n\n  const config: any = peer_connection_config;\n\n  const playStreamIds = useRef<string[]>([]).current;\n\n  var pingTimer: any = -1;\n\n  var idMapping = new Array();\n\n  const closePeerConnection = useCallback(\n    (streamId: string) => {\n      if (debug) console.log('closePeerConnection');\n\n      var peerConnection: RTCPeerConnection = remotePeerConnection[streamId];\n\n      if (peerConnection != null) {\n        delete remotePeerConnection[streamId];\n\n        // @ts-ignore\n        if (peerConnection.dataChannel != null) {\n          // @ts-ignore\n          peerConnection.dataChannel.close();\n        }\n        if (peerConnection.signalingState !== 'closed') {\n          peerConnection.close();\n        }\n        const playStreamIndex = playStreamIds.indexOf(streamId);\n\n        if (playStreamIndex !== -1) {\n          playStreamIds.splice(playStreamIndex, 1);\n        }\n      }\n\n      if (remotePeerConnectionStats[streamId] != null) {\n        clearInterval(remotePeerConnectionStats[streamId].timerId);\n        delete remotePeerConnectionStats[streamId];\n      }\n    },\n    [playStreamIds, remotePeerConnection, remotePeerConnectionStats]\n  );\n\n  const iceCandidateReceived = useCallback(\n    (event: any, streamId: string) => {\n      if (event.candidate) {\n        const jsCmd = {\n          command: 'takeCandidate',\n          streamId,\n          label: event.candidate.sdpMLineIndex,\n          id: event.candidate.sdpMid,\n          candidate: event.candidate.candidate,\n        };\n\n        if (ws) ws.sendJson(jsCmd);\n      }\n    },\n    [ws]\n  );\n\n  const onTrack = useCallback(\n    (event: any, streamId: any) => {\n        const dataObj = {\n          stream: event.streams[0],\n          track: event.track,\n          streamId: streamId,\n          trackId: idMapping[streamId] != undefined? idMapping[streamId][event.transceiver.mid]:undefined,\n        }\n        if (adaptorRef.current) {\n          callback.call(adaptorRef.current, 'newStreamAvailable', dataObj);\n          callback.call(adaptorRef.current, 'newTrackAvailable', dataObj);\n        }\n    },\n    [callback]\n  );\n\n  const initDataChannel = useCallback((streamId: string, dataChannel: any) => {\n    dataChannel.onerror = (error: any) => {\n      console.log('Data Channel Error:', error);\n      const obj = {\n        streamId: streamId,\n        error: error,\n      };\n      console.log('channel status: ', dataChannel.readyState);\n      if (dataChannel.readyState !== 'closed' && callbackError) {\n        callbackError('data_channel_error', obj);\n      }\n    };\n\n    dataChannel.onmessage = (event: any) => {\n      const obj = {\n        streamId: streamId,\n        event: event,\n      };\n      if (callback && adaptorRef.current)\n        callback.call(adaptorRef.current, 'data_received', obj);\n    };\n\n    dataChannel.onopen = () => {\n      // @ts-ignore\n      remotePeerConnection[streamId].dataChannel = dataChannel;\n      console.log('Data channel is opened');\n      if (callback && adaptorRef.current)\n        callback.call(adaptorRef.current, 'data_channel_opened', streamId);\n    };\n\n    dataChannel.onclose = () => {\n      console.log('Data channel is closed');\n      if (callback && adaptorRef.current)\n        callback.call(adaptorRef.current, 'data_channel_closed', streamId);\n    };\n  }, []);\n\n  const initPeerConnection = useCallback(\n    async (streamId: string, dataChannelMode: 'publish' | 'play' | 'peer') => {\n      if (debug) console.log('in initPeerConnection');\n\n      if (remotePeerConnection[streamId] == null) {\n        const closedStreamId = streamId;\n        remotePeerConnection[streamId] = new RTCPeerConnection(config || { iceServers: [] });\n        remoteDescriptionSet[streamId] = false;\n        iceCandidateList[streamId] = [];\n\n        if (!playStreamIds.includes(streamId) && localStream.current) {\n          // @ts-ignore\n          localStream.current.getTracks().forEach((track) => {\n            remotePeerConnection[streamId].addTrack(track, localStream.current);\n//            localStream.current.getTracks().forEach((track: MediaStreamTrack) => { remotePeerConnection[streamId].addTrack(track, localStream.current); });\n          });\n\n        }\n\n        try {\n          // @ts-ignore\n          remotePeerConnection[streamId].onicecandidate = (event: RTCPeerConnectionIceEvent) => {\n            if (debug) console.log('onicecandidate', event);\n            iceCandidateReceived(event, closedStreamId);\n          };\n          // @ts-ignore\n          remotePeerConnection[streamId].ontrack = (event: any) => {\n            if (debug) console.log('onTrack', event);\n            onTrack(event, closedStreamId);\n          };\n\n          // @ts-ignore\n          remotePeerConnection[streamId].ondatachannel = (event: RTCDataChannelEvent) => {\n            initDataChannel(streamId, event.channel);\n          };\n\n          if (dataChannelMode === 'publish') {\n            const dataChannelOptions = {\n              ordered: true,\n            };\n            const dataChannelPeer = remotePeerConnection[streamId].createDataChannel(streamId, dataChannelOptions);\n            initDataChannel(streamId, dataChannelPeer);\n          } else if (dataChannelMode === 'play') {\n            // @ts-ignore\n            remotePeerConnection[streamId].ondatachannel = (event: RTCDataChannelEvent) => {\n              initDataChannel(streamId, event.channel);\n            };\n          } else {\n            const dataChannelOptions = {\n              ordered: true,\n            };\n            const dataChannelPeer = remotePeerConnection[streamId].createDataChannel(streamId, dataChannelOptions);\n            initDataChannel(streamId, dataChannelPeer);\n            // @ts-ignore\n            remotePeerConnection[streamId].ondatachannel = (event: RTCDataChannelEvent) => {\n              initDataChannel(streamId, event.channel);\n            };\n          }\n        } catch (err: any) {\n          if (debug) console.error('initPeerConnectionError', err.message);\n        }\n      }\n    },\n    [\n      config,\n      debug,\n      iceCandidateList,\n      iceCandidateReceived,\n      onTrack,\n      playStreamIds,\n      remoteDescriptionSet,\n      remotePeerConnection,\n    ]\n  );\n\n  const gotDescription = useCallback(\n    async (configuration: any, streamId: string) => {\n      try {\n        if (debug) console.log('in gotDescription');\n\n        // const response =\n        await remotePeerConnection[streamId].setLocalDescription(configuration);\n\n        const jsCmd = {\n          command: 'takeConfiguration',\n          streamId,\n          type: configuration.type,\n          sdp: configuration.sdp,\n        };\n\n        if (ws) ws.sendJson(jsCmd);\n      } catch (err: any) {\n        if (debug) console.log('gotDescriptionError', err);\n      }\n    },\n    [debug, remotePeerConnection, ws]\n  );\n\n  const startPublishing = useCallback(\n    async (streamId: string) => {\n      try {\n        if (debug) console.log('in start publishing');\n\n        await initPeerConnection(streamId, 'publish');\n        const configuration = await remotePeerConnection[streamId].createOffer(\n          config\n        );\n        await gotDescription(configuration, streamId);\n      } catch (err: any) {\n        if (debug) console.log('startPublishing error', err.message, err.stack);\n      }\n    },\n    [config, debug, gotDescription, initPeerConnection, remotePeerConnection]\n  );\n\n  const addIceCandidate = useCallback(\n    async (streamId: string, candidate: any) => {\n      try {\n        if (debug) console.log('in addIceCandidate');\n        if (debug) console.debug(`addIceCandidate ${streamId}`);\n        if (debug) console.debug('candidate', candidate);\n        await remotePeerConnection[streamId].addIceCandidate(candidate);\n      } catch (err) {}\n    },\n    [debug, remotePeerConnection]\n  );\n\n  const takeConfiguration = useCallback(\n    async (streamId: any, configuration: string, typeOfConfiguration: string , idMap?:string) => {\n      const type = typeOfConfiguration;\n      var conf = configuration;\n      conf = conf.replace(\"a=extmap:13 urn:3gpp:video-orientation\\r\\n\", \"\");\n      const isTypeOffer = type === 'offer';\n      idMapping[streamId] = idMap;\n\n      if (debug) console.log('in takeConfiguration');\n      let dataChannelMode: 'publish' | 'play' = 'publish';\n      if (isTypeOffer) {\n        dataChannelMode = 'play';\n      }\n      await initPeerConnection(streamId, dataChannelMode);\n      try {\n        await remotePeerConnection[streamId].setRemoteDescription(\n          new RTCSessionDescription({\n            sdp: conf,\n            type,\n          })\n        );\n        remoteDescriptionSet[streamId] = true;\n        const { length } = Object.keys(iceCandidateList[streamId]);\n        for (let i = 0; i < length; i++) {\n          await addIceCandidate(streamId, iceCandidateList[streamId][i]);\n        }\n        iceCandidateList[streamId] = [];\n        if (isTypeOffer) {\n          const configur = await remotePeerConnection[streamId].createAnswer(\n\n          );\n          await gotDescription(configur, streamId);\n        }\n      } catch (error: any) {\n        if (\n          error.toString().indexOf('InvalidAccessError') > -1 ||\n          error.toString().indexOf('setRemoteDescription') > -1\n        ) {\n          /**\n           * This error generally occurs in codec incompatibility.\n           * AMS for a now supports H.264 codec. This error happens when some browsers try to open it from VP8.\n           */\n          if (callbackError) callbackError('notSetRemoteDescription');\n        }\n      }\n    },\n    [\n      addIceCandidate,\n      callbackError,\n      debug,\n      gotDescription,\n      iceCandidateList,\n      initPeerConnection,\n      remoteDescriptionSet,\n      remotePeerConnection,\n    ]\n  );\n\n  const takeCandidate = useCallback(\n    // @ts-ignore\n    async (idOfTheStream: string, tmpLabel, tmpCandidate, sdpMid) => {\n      if (debug) console.log('in takeCandidate');\n\n      const streamId = idOfTheStream;\n      const label = tmpLabel;\n      const candidateSdp = tmpCandidate;\n\n      const candidate = new RTCIceCandidate({\n        sdpMLineIndex: label,\n        candidate: candidateSdp,\n        sdpMid,\n      });\n\n      await initPeerConnection(streamId, 'peer');\n\n      if (remoteDescriptionSet[streamId] === true) {\n        await addIceCandidate(streamId, candidate);\n      } else {\n        if (debug)\n          console.debug(\n            'Ice candidate is added to list because remote description is not set yet'\n          );\n        const index = iceCandidateList[streamId].findIndex(\n          (i) => JSON.stringify(i) === JSON.stringify(candidate)\n        );\n        if (index === -1) {\n          const keys = Object.keys(candidate);\n          for (const key in keys) {\n            // @ts-ignore\n            if (candidate[key] === undefined || candidate[key] === '') {\n              // @ts-ignore\n              candidate[key] = null;\n            }\n          }\n          iceCandidateList[streamId].push(candidate);\n        }\n      }\n    },\n    [\n      addIceCandidate,\n      debug,\n      iceCandidateList,\n      initPeerConnection,\n      remoteDescriptionSet,\n    ]\n  );\n\n  var ws: any = useRef(new WebSocket(url)).current;\n\n  ws.sendJson = (dt: any) => {\n    ws.send(JSON.stringify(dt));\n  };\n\n  useEffect(() => {\n    ws.onopen = () => {\n      if (debug) console.log('web socket opened !');\n      callback.call(adaptorRef.current, 'initiated');\n      // connection opened\n\n      getDevices();\n\n      if (!onlyDataChannel) {\n        mediaDevices.getUserMedia(mediaConstraints)\n          .then((stream: any) => {\n            // Got stream!\n            if (debug) console.log('got stream');\n\n            localStream.current = stream;\n            if (debug) console.log('in stream', localStream.current);\n          })\n          .catch((error: any) => {\n            // Log error\n            if (debug) console.log('got error', error , mediaConstraints);\n          });\n      } else {\n        if (debug) console.log('only data channel');\n      }\n      setPingTimer();\n    };\n\n    ws.onmessage = (e: any) => {\n      // a message was received\n      const data = JSON.parse(e.data);\n      if (debug) console.log(' onmessage', data);\n\n      switch (data.command) {\n        case 'start':\n          // start  publishing\n          startPublishing(data.streamId);\n          break;\n        case 'takeCandidate':\n          //console.log(' in takeCandidate', data);\n          takeCandidate(data.streamId, data.label, data.candidate, data.id);\n          break;\n        case 'takeConfiguration':\n          takeConfiguration(data.streamId, data.sdp, data.type,data.idMapping);\n          break;\n        case 'stop':\n          if (debug) console.log(' in stop', data);\n          closePeerConnection(data.streamId);\n          break;\n        case 'error':\n          if (debug) console.log(' in error', data);\n          if (callbackError) {\n            callbackError(data.definition, data);\n          }\n          break;\n        case 'notification':\n          if (debug) console.log(' in notification', data);\n\n          if (adaptorRef.current)\n            callback.call(adaptorRef.current, data.definition, data);\n          break;\n        case 'roomInformation':\n          if (debug) console.log(' in roomInformation', data);\n          callback.call(adaptorRef.current, data.command, data);\n          break;\n        case 'pong':\n          if (debug) console.log(' in pong', data);\n          break;\n        case 'streamInformation':\n          if (debug) console.log(' in streamInformation', data);\n          callback.call(adaptorRef.current, data.command, data);\n          break;\n        case 'trackList':\n          if (debug) console.log(' in trackList', data);\n          callback.call(adaptorRef.current, data.command, data);\n          break;\n        case 'connectWithNewId':\n          if (debug) console.log(' in connectWithNewId', data);\n          callback.call(adaptorRef.current, data.command, data);\n          break;\n        case 'peerMessageCommand':\n          if (debug) console.log(' in peerMessageCommand', data);\n          callback.call(adaptorRef.current, data.command, data);\n          break;\n        default:\n          if (debug) console.log(' in default', data);\n          callback.call(adaptorRef.current, data.command, data);\n          break;\n      }\n    };\n\n    ws.onerror = (e: any) => {\n      // an error occurred\n      clearPingTimer();\n      if (debug) console.log(e.message);\n    };\n\n    ws.onclose = (e: any) => {\n      // connection closed\n      clearPingTimer();\n      if (debug) console.log(e.code, e.reason);\n    };\n  }, [\n    callback,\n    callbackError,\n    closePeerConnection,\n    config,\n    debug,\n    mediaConstraints,\n    startPublishing,\n    takeCandidate,\n    takeConfiguration,\n    ws,\n  ]);\n\n  const publish = useCallback(\n    (\n      streamId: string,\n      token?: string,\n      subscriberId?: string,\n      subscriberCode?: string,\n      streamName?: string,\n      mainTrack?:string,\n      metaData?:string\n    ) => {\n      let data = {} as any;\n      if (onlyDataChannel) {\n        data = {\n          command: 'publish',\n          streamId: streamId,\n          token: token,\n          subscriberId: typeof subscriberId !== undefined ? subscriberId : '',\n          subscriberCode: typeof subscriberCode !== undefined ? subscriberCode : '',\n          video: false,\n          audio: false,\n        };\n      } else {\n        if (!localStream.current) return;\n\n        let [video, audio] = [false, false];\n\n        // @ts-ignore\n        video = localStream.current.getVideoTracks().length > 0;\n        // @ts-ignore\n        audio = localStream.current.getAudioTracks().length > 0;\n\n        data = {\n          command: 'publish',\n          streamId,\n          token,\n          subscriberId: typeof subscriberId !== undefined ? subscriberId : '',\n          subscriberCode: typeof subscriberCode !== undefined ? subscriberCode : '',\n          streamName,\n          mainTrack,\n          video,\n          audio,\n          metaData\n        };\n      }\n\n      if (ws) ws.sendJson(data);\n    },\n    [ws]\n  );\n\n  //play\n  const play = useCallback(\n    (streamId: string, token?: string, room?: string , enableTracks?:MediaStreamTrack[],subscriberId?:string, subscriberCode?:string ,metaData?:string ) => {\n      playStreamIds.push(streamId);\n      const data = {\n        command: 'play',\n        streamId,\n        token,\n        room,\n        enableTracks,\n        subscriberId: typeof subscriberId !== undefined ? subscriberId : '',\n        subscriberCode: typeof subscriberCode !== undefined ? subscriberCode : '',\n        viewerInfo: typeof metaData !== undefined && metaData != null ? metaData : \"\"\n      };\n\n      if (token) {\n        data.token = token;\n      }\n\n      if (ws) ws.sendJson(data);\n    },\n    [playStreamIds, ws]\n  );\n\n  const stop = useCallback(\n    (streamId: any) => {\n      closePeerConnection(streamId);\n\n      const data = {\n        command: 'stop',\n        streamId: streamId,\n      };\n      if (ws) ws.sendJson(data);\n    },\n    [ws]\n  );\n\n  const join = useCallback(\n    (streamId: string) => {\n      const data = {\n        command: 'join',\n        streamId,\n      };\n      if (ws) ws.sendJson(data);\n    },\n    [ws]\n  );\n\n  const leave = useCallback(\n    (streamId: string) => {\n      const data = {\n        command: 'leave',\n        streamId,\n      };\n      if (ws) ws.sendJson(data);\n    },\n    [ws]\n  );\n\n  const muteLocalMic = useCallback(() => {\n    if (localStream.current) {\n      // @ts-ignore\n      localStream.current.getAudioTracks().forEach((track) => {\n        track.enabled = false;\n      });\n    }\n  }, [localStream]);\n\n  const unmuteLocalMic = useCallback(() => {\n    if (localStream.current) {\n      // @ts-ignore\n      localStream.current.getAudioTracks().forEach((track) => {\n        track.enabled = true;\n      });\n    }\n  }, [localStream]);\n\n  const setLocalMicVolume = useCallback((volume: number) => {\n    if (localStream.current) {\n      // @ts-ignore\n      localStream.current.getAudioTracks().forEach((track) => {\n        track._setVolume(volume);\n      });\n    }\n  }, [localStream]);\n\n  const setRemoteAudioVolume = useCallback((volume: number, streamId: string, roomName: string|undefined) => {\n    console.log(\"Setting remote mic\")\n    // @ts-ignore\n    if (typeof roomName != 'undefined' && remotePeerConnection[roomName]) {\n      remotePeerConnection[roomName]._remoteStreams.forEach((stream) => {\n        let audioTrackID = \"ARDAMSa\" + streamId;\n        let track = stream.getTrackById(audioTrackID);\n        if (track) {\n          track._setVolume(volume);\n        }\n      });\n    } else if(remotePeerConnection[streamId]) {\n      remotePeerConnection[streamId]._remoteStreams.forEach((stream) => {\n        let audioTrackID = \"ARDAMSa\" + streamId;\n        let track = stream.getTrackById(audioTrackID);\n        if (track) {\n          track._setVolume(volume);\n        }\n      });\n    }\n  }, [remotePeerConnection]);\n\n  const muteRemoteAudio = useCallback((streamId: string, roomName: string|undefined) => {\n    console.log(\"Muting remote mic\")\n    // @ts-ignore\n    if (typeof roomName != 'undefined' && remotePeerConnection[roomName]) {\n      remotePeerConnection[roomName]._remoteStreams.forEach((stream) => {\n        let audioTrackID = \"ARDAMSa\" + streamId;\n        let track = stream.getTrackById(audioTrackID);\n        if (track) {\n          track.enabled = false;\n        }\n      });\n    } else if(remotePeerConnection[streamId]) {\n      remotePeerConnection[streamId]._remoteStreams.forEach((stream) => {\n        let audioTrackID = \"ARDAMSa\" + streamId;\n        let track = stream.getTrackById(audioTrackID);\n        if (track) {\n          track.enabled = false;\n        }\n      });\n    }\n  }, [remotePeerConnection]);\n\n  const unmuteRemoteAudio = useCallback((streamId: string, roomName: string|undefined) => {\n    console.log(\"Muting remote mic\")\n    // @ts-ignore\n    if (typeof roomName != 'undefined' && remotePeerConnection[roomName]) {\n      remotePeerConnection[roomName]._remoteStreams.forEach((stream) => {\n        let audioTrackID = \"ARDAMSa\" + streamId;\n        let track = stream.getTrackById(audioTrackID);\n        if (track) {\n          track.enabled = true;\n        }\n      });\n    } else if(remotePeerConnection[streamId]) {\n      remotePeerConnection[streamId]._remoteStreams.forEach((stream) => {\n        let audioTrackID = \"ARDAMSa\" + streamId;\n        let track = stream.getTrackById(audioTrackID);\n        if (track) {\n          track.enabled = true;\n        }\n      });\n    }\n  }, [remotePeerConnection]);\n\n  const getRoomInfo = useCallback(\n    (room: string, streamId?: string) => {\n      var data = {\n        command: 'getRoomInfo',\n        streamId,\n        room,\n      };\n      if (ws) ws.sendJson(data);\n    },\n    [ws]\n  );\n  const setPingTimer = useCallback(() => {\n    pingTimer = setInterval(()=>{\n      if(ws != null)\n      ws.sendJson({\n        command: 'ping',\n      });\n    },3000);\n  },[]);\n\n  const clearPingTimer = useCallback(() => {\n    if (pingTimer != -1) {\n      if (debug) {\n          console.log(\"Clearing ping message timer\");\n      }\n      clearInterval(pingTimer);\n      pingTimer = -1;\n    }\n  },[]);\n\n  //Data Channel\n  const peerMessage = useCallback(\n    (streamId: string, definition: any, data: any) => {\n      const jsCmd = {\n        command: 'peerMessageCommand',\n        streamId: streamId,\n        definition: definition,\n        data: data,\n      };\n      if (ws) ws.sendJson(jsCmd);\n    },\n    [ws]\n  );\n\n  const getDevices = useCallback( async () => {\n    var deviceArray = new Array();\n\n    try {\n      const devices = await mediaDevices.enumerateDevices();\n      // @ts-ignore\n      devices.map( device => {\n        deviceArray.push(device);\n      } );\n\n      callback.call(adaptorRef.current, 'available_devices', deviceArray);\n    } catch (err: any) {\n      console.log(\"Cannot get devices -> error: \" + err);\n    }\n    // @ts-ignore\n    mediaDevices.ondevicechange = async () => {\n      console.log(\"Device change event\")\n      getDevices();\n    };\n\n    return deviceArray;\n\n  }, [callback]);\n\n  const sendData = useCallback(\n    (streamId: string, message: string) => {\n      // @ts-ignore\n      const dataChannel = remotePeerConnection[streamId].dataChannel;\n      dataChannel.send(message);\n      if (debug) console.log(' send message in server', message);\n    },\n    [ws]\n  );\n\n  const turnOffLocalCamera = useCallback(() => {\n    if (localStream.current) {\n      // @ts-ignore\n      localStream.current.getVideoTracks().forEach((track) => {\n        track.enabled = false;\n      });\n    }\n  }, []);\n\n  const turnOnLocalCamera = useCallback(() => {\n    if (localStream.current) {\n      // @ts-ignore\n      localStream.current.getVideoTracks().forEach((track) => {\n        track.enabled = true;\n      });\n    }\n  }, []);\n\n  const turnOffRemoteCamera = useCallback((streamId: string, roomName: string|undefined) => {\n    console.log(\"Turning off remote camera\")\n    // @ts-ignore\n    if (typeof roomName != 'undefined' && remotePeerConnection[roomName]) {\n      remotePeerConnection[roomName]._remoteStreams.forEach((stream) => {\n        let videoTrackID = \"ARDAMSv\" + streamId;\n        let track = stream.getTrackById(videoTrackID);\n        if (track) {\n          track.enabled = false;\n        }\n      });\n    } else if(remotePeerConnection[streamId]) {\n      remotePeerConnection[streamId]._remoteStreams.forEach((stream) => {\n        let videoTrackID = \"ARDAMSv\" + streamId;\n        let track = stream.getTrackById(videoTrackID);\n        if (track) {\n          track.enabled = false;\n        }\n      });\n    }\n  }, [remotePeerConnection]);\n\n  const turnOnRemoteCamera = useCallback((streamId: string, roomName: string|undefined) => {\n    console.log(\"Turning on remote camera\")\n    // @ts-ignore\n    if (typeof roomName != 'undefined' && remotePeerConnection[roomName]) {\n      remotePeerConnection[roomName]._remoteStreams.forEach((stream) => {\n        let videoTrackID = \"ARDAMSv\" + streamId;\n        let track = stream.getTrackById(videoTrackID);\n        if (track) {\n          track.enabled = true;\n        }\n      });\n    } else if(remotePeerConnection[streamId]) {\n      remotePeerConnection[streamId]._remoteStreams.forEach((stream) => {\n        let videoTrackID = \"ARDAMSv\" + streamId;\n        let track = stream.getTrackById(videoTrackID);\n        if (track) {\n          track.enabled = true;\n        }\n      });\n    }\n  }, [remotePeerConnection]);\n\n  const switchCamera = useCallback(() => {\n    if (localStream.current) {\n      // @ts-ignore\n      localStream.current.getVideoTracks().forEach((track) => {\n        track._switchCamera();\n      });\n    }\n  }, [localStream]);\n\n  //adaptor ref\n  useEffect(() => {\n    adaptorRef.current = {\n      publish,\n      play,\n      stop,\n      join,\n      leave,\n      getRoomInfo,\n      initPeerConnection,\n      localStream,\n      peerMessage,\n      sendData,\n      muteLocalMic,\n      unmuteLocalMic,\n      setLocalMicVolume,\n      setRemoteAudioVolume,\n      muteRemoteAudio,\n      unmuteRemoteAudio,\n      turnOffLocalCamera,\n      turnOnLocalCamera,\n      turnOffRemoteCamera,\n      turnOnRemoteCamera,\n      switchCamera,\n      getDevices,\n    };\n  }, [\n    publish,\n    play,\n    stop,\n    localStream,\n    join,\n    leave,\n    getRoomInfo,\n    initPeerConnection,\n    peerMessage,\n    sendData,\n    muteLocalMic,\n    unmuteLocalMic,\n    setLocalMicVolume,\n    setRemoteAudioVolume,\n    muteRemoteAudio,\n    unmuteRemoteAudio,\n    turnOffLocalCamera,\n    turnOnLocalCamera,\n    turnOffRemoteCamera,\n    turnOnRemoteCamera,\n    switchCamera,\n    getDevices,\n  ]);\n\n  return {\n    publish,\n    play,\n    stop,\n    localStream,\n    join,\n    leave,\n    getRoomInfo,\n    initPeerConnection,\n    peerMessage,\n    sendData,\n    setLocalMicVolume,\n    setRemoteAudioVolume,\n    muteLocalMic,\n    unmuteLocalMic,\n    muteRemoteAudio,\n    unmuteRemoteAudio,\n    turnOffLocalCamera,\n    turnOnLocalCamera,\n    turnOffRemoteCamera,\n    turnOnRemoteCamera,\n    switchCamera,\n    getDevices,\n  } as Adaptor;\n} // useAntmedia fn end\n\nexport function rtc_view(\n  stream: any,\n  customStyles: any = { width: '70%', height: '50%', alignSelf: 'center' },\n  objectFit: any = 'cover'\n) {\n  if(stream instanceof MediaStreamTrack ){\n    let mediaStream = new MediaStream(undefined);\n    mediaStream.addTrack(stream);\n    stream = mediaStream.toURL();\n  }\n  const props = {\n    streamURL: stream,\n    style: customStyles,\n    objectFit: objectFit,\n  };\n\n  // @ts-ignore\n  return <RTCView {...props} />;\n}\n"],"mappings":"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","ignoreList":[]}